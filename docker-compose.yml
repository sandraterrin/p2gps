version: "3"
services:
  # Ahora se indican los servicios por el orden en que se quiere que se inicien.
  # Por ejemplo, mongo debe estar antes de order.
  mongo:
    image: paberlo/p2gps:db
    deploy:
      replicas: 1 # Para escalabilidad del servicio.
      resources:
       limits:
        cpus: "0.15"
        memory: 200M
      restart_policy:
       condition: on-failure # Reiniciar el contenedor si falla
    ports:
      - "28017:28017" # Mapeo el puerto del contenedor (derecha) con el puerto del host del servicio
      - "27017:27017"
    volumes:
      - "db-data:/data/db" # Para dar persistencia a la sesi√≥n
  order:
    image: paberlo/p2gps:order
    depends_on:
      - "mongo" # Le pasamos al servicio order la IP del servicio mongo
    deploy:
      replicas: 1
      resources:
       limits:
        cpus: "0.3"
        memory: 500M
      restart_policy:
       condition: on-failure
    ports:
      - "8080:8080"
  web:
    image: paberlo/p2gps:web
    deploy:
      replicas: 1
      resources:
       limits:
        cpus: "0.25"
        memory: 300M
      restart_policy:
       condition: on-failure
    ports:
      - "80:8080"
volumes:
      db-data:
